name: Rust CI/CD

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Run tests
        run: cargo test --verbose

  docker:
    name: Docker Build and Push
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: false
          load: true
          tags: keystonelight:latest

      - name: Test Docker image
        run: |
          # Test serve command in background with timeout
          timeout 10s docker run --rm keystonelight:latest serve &
          # Wait for server to start
          sleep 5
          # Kill the server after tests
          pkill -f "keystonelight serve" || true
          # Test client command
          docker run --rm keystonelight:latest client

      - name: Test docker-compose
        run: |
          # Start the server with timeout
          timeout 30s docker-compose up app &
          # Wait for server to start
          sleep 5
          # Test basic operations
          echo "SET test hello" | nc localhost 7878
          echo "GET test" | nc localhost 7878
          # Clean up
          docker-compose down --remove-orphans
          # Make sure all containers are stopped
          docker ps -q | xargs -r docker stop